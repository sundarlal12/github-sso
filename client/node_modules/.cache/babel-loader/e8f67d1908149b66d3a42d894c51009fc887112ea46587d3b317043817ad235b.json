{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import GithubDashboard from './pages/GithubDashboard';\n\n// function Home() {\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const token = urlParams.get('token');\n//     if (token) {\n//       localStorage.setItem('github_token', token);\n//       navigate('/dashboard');\n//     }\n//   }, [navigate]);\n\n//   return (\n//     <div style={{ textAlign: 'center', marginTop: '10%' }}>\n//       <h1>Welcome to VAPTlab</h1>\n//       <a href=\"http://localhost:5001/auth/github\">\n//         <button style={{ fontSize: '20px', padding: '10px 20px' }}>Sign in with GitHub</button>\n//       </a>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/dashboard\" element={<GithubDashboard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// Add this below your existing GitHub strategy and session setup\nconst axios = require('axios');\n\n// Route to get user's repositories\napp.get('/api/github/repos', async (req, res) => {\n  var _req$headers$authoriz;\n  const token = (_req$headers$authoriz = req.headers.authorization) === null || _req$headers$authoriz === void 0 ? void 0 : _req$headers$authoriz.split(' ')[1]; // Expecting Bearer token\n\n  if (!token) {\n    return res.status(401).json({\n      error: 'Access token missing'\n    });\n  }\n  try {\n    const response = await axios.get('https://api.github.com/user/repos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/vnd.github+json'\n      }\n    });\n    res.json(response.data);\n  } catch (error) {\n    console.error('Error fetching repos:', error.message);\n    res.status(500).json({\n      error: 'Failed to fetch repositories'\n    });\n  }\n});","map":{"version":3,"names":["axios","require","app","get","req","res","_req$headers$authoriz","token","headers","authorization","split","status","json","error","response","Authorization","Accept","data","console","message"],"sources":["/Users/sundarlalbaror/Downloads/hack/vaptlab-backend/client/src/App.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import GithubDashboard from './pages/GithubDashboard';\n\n// function Home() {\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const token = urlParams.get('token');\n//     if (token) {\n//       localStorage.setItem('github_token', token);\n//       navigate('/dashboard');\n//     }\n//   }, [navigate]);\n\n//   return (\n//     <div style={{ textAlign: 'center', marginTop: '10%' }}>\n//       <h1>Welcome to VAPTlab</h1>\n//       <a href=\"http://localhost:5001/auth/github\">\n//         <button style={{ fontSize: '20px', padding: '10px 20px' }}>Sign in with GitHub</button>\n//       </a>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/dashboard\" element={<GithubDashboard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n\n// Add this below your existing GitHub strategy and session setup\nconst axios = require('axios');\n\n// Route to get user's repositories\napp.get('/api/github/repos', async (req, res) => {\n  const token = req.headers.authorization?.split(' ')[1]; // Expecting Bearer token\n\n  if (!token) {\n    return res.status(401).json({ error: 'Access token missing' });\n  }\n\n  try {\n    const response = await axios.get('https://api.github.com/user/repos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/vnd.github+json'\n      }\n    });\n\n    res.json(response.data);\n  } catch (error) {\n    console.error('Error fetching repos:', error.message);\n    res.status(500).json({ error: 'Failed to fetch repositories' });\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAE9B;AACAC,GAAG,CAACC,GAAG,CAAC,mBAAmB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAAA,IAAAC,qBAAA;EAC/C,MAAMC,KAAK,IAAAD,qBAAA,GAAGF,GAAG,CAACI,OAAO,CAACC,aAAa,cAAAH,qBAAA,uBAAzBA,qBAAA,CAA2BI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExD,IAAI,CAACH,KAAK,EAAE;IACV,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,CAAC;EAChE;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACG,GAAG,CAAC,mCAAmC,EAAE;MACpEK,OAAO,EAAE;QACPO,aAAa,EAAE,UAAUR,KAAK,EAAE;QAChCS,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IAEFX,GAAG,CAACO,IAAI,CAACE,QAAQ,CAACG,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACM,OAAO,CAAC;IACrDd,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA+B,CAAC,CAAC;EACjE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}